% Thrasyvoulos Karydis
% 13/02/2015
% (c) Massachusetts Institute of Technology 2015
% Permission granted for experimental and personal use;
% license for commercial sale available from MIT

%this file has outputs the features in a new file called 'filename_feat'

clear;
clc;

f = load('andreas_pain_2501');
%reminder Fs is 10 Hz for freq data

filename = strcat(f.filename,'_feat');
k = 1;

varNames = {'label', ...
            'meanalpha','alphaback','alphafront','alphaleft','alpharight', ...
            'meanbeta' ,'betaback' ,'betafront' ,'betaleft' ,'betaright', ...
            'meangamma','gammaback','gammafront','gammaleft','gammaright', ...
            'meandelta','deltaback','deltafront','deltaleft','deltaright', ...
            'meantheta','thetaback','thetafront','thetaleft','thetaright' };
        
observations = [];
    
for t=1:size(f.alpha,1)
        
     if (~strcmp(f.label{t},'unknown'))
        response{k} = f.label{t};
        row = [nanmean(f.alpha(t,:)) ...
        nanmean(f.alpha(t,[1 4])) ...
        nanmean(f.alpha(t,[2 3])) ...
        nanmean(f.alpha(t,[1 2])) ...
        nanmean(f.alpha(t,[3 4])) ...
        ...
        nanmean(f.beta(t,:)) ...
        nanmean(f.beta(t,[1 4])) ...
        nanmean(f.beta(t,[2 3])) ...
        nanmean(f.beta(t,[1 2])) ...
        nanmean(f.beta(t,[3 4])) ...
        ...
        nanmean(f.gamma(t,:)) ...
        nanmean(f.gamma(t,[1 4])) ...
        nanmean(f.gamma(t,[2 3])) ...
        nanmean(f.gamma(t,[1 2])) ...
        nanmean(f.gamma(t,[3 4])) ...
        ...
        nanmean(f.delta(t,:)) ...
        nanmean(f.delta(t,[1 4])) ...
        nanmean(f.delta(t,[2 3])) ...
        nanmean(f.delta(t,[1 2])) ...
        nanmean(f.delta(t,[3 4])) ...
        ...
        nanmean(f.theta(t,:)) ...
        nanmean(f.theta(t,[1 4])) ...
        nanmean(f.theta(t,[2 3])) ...
        nanmean(f.theta(t,[1 2])) ...
        nanmean(f.theta(t,[3 4])) ];
        
        observations = [observations ; row];
        k = k+1;
     end
end

observations = zscore(observations);

featuresold = [cell2table(response') array2table(observations)];
featuresold.Properties.VariableNames = varNames;

observations = [];
    
for t=1:size(f.alpha,1)
        response{t} = f.label{t};
        row = [nanmean(f.alpha(t,:)) ...
        nanmean(f.alpha(t,[1 4])) ...
        nanmean(f.alpha(t,[2 3])) ...
        nanmean(f.alpha(t,[1 2])) ...
        nanmean(f.alpha(t,[3 4])) ...
        ...
        nanmean(f.beta(t,:)) ...
        nanmean(f.beta(t,[1 4])) ...
        nanmean(f.beta(t,[2 3])) ...
        nanmean(f.beta(t,[1 2])) ...
        nanmean(f.beta(t,[3 4])) ...
        ...
        nanmean(f.gamma(t,:)) ...
        nanmean(f.gamma(t,[1 4])) ...
        nanmean(f.gamma(t,[2 3])) ...
        nanmean(f.gamma(t,[1 2])) ...
        nanmean(f.gamma(t,[3 4])) ...
        ...
        nanmean(f.delta(t,:)) ...
        nanmean(f.delta(t,[1 4])) ...
        nanmean(f.delta(t,[2 3])) ...
        nanmean(f.delta(t,[1 2])) ...
        nanmean(f.delta(t,[3 4])) ...
        ...
        nanmean(f.theta(t,:)) ...
        nanmean(f.theta(t,[1 4])) ...
        nanmean(f.theta(t,[2 3])) ...
        nanmean(f.theta(t,[1 2])) ...
        nanmean(f.theta(t,[3 4])) ];
        
    observations = [observations ; row];
      
end
observations = zscore(observations);

featuresnew = [cell2table(response') array2table(observations)];
featuresnew.Properties.VariableNames = varNames;
save(filename,'featuresold','featuresnew');

